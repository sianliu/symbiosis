# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy CRUD app

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      working-directory: ./crud-mysql

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
    - uses: actions/checkout@v2

    - name: Install node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
#
#    - name: Installing Packages
#      run: npm install
#      working-directory: ${{ env.working-directory }}

#    - name: SSH to server
#      working-directory: ${{ env.working-directory }}
#      shell: bash
#      env:
#        SERVER_HOST: ${{ secrets.AWS_SERVER_HOST }}
#        SERVER_SSH_KEY: ${{ secrets.SERVER_DEPLOY_SSH_KEY }}
#      run: |
#        echo "$SERVER_SSH_KEY" > ../server_ssh.key
#        sudo chmod 600 ../server_ssh.key
#        ssh -i ../server_ssh.key ec2-user@$AWS_SERVER_HOST

    - name: Install pm2
      run: npm install pm2@latest -g
      working-directory: ${{ env.working-directory }}

    - name: Start crud app
      run: pm2 start app.js && pm2 save
      working-directory: ${{ env.working-directory }}

#    - name: Restart PM2
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HK_AWS_SERVER_HOST }}
#        username: ec2-user
#        key: ${{ secrets.HK_SERVER_DEPLOY_SSH_KEY }}
#        proxy_host: ${{ secrets.HK_AWS_PROXY_HOST }}
#        proxy_username: ec2-user
#        proxy_key: ${{ secrets.HK_AWS_PROXY_KEY }}
#        proxy_port: 22
#        port: 22
#        script: "cd compliance-app && npm install && pm2 restart wallex-compliance-app"

